version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DATABASE}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - ${TYPEORM_PORT}:${TYPEORM_PORT}
    networks:
      - postgres
      
  server:
    container_name: blog-server
    build:
      context: ./server
    depends_on:
      - postgres
    restart: unless-stopped
    ports:
      - '${API_PORT}:3001'
    environment:
      - API_PORT=${API_PORT}
      - API_HOST=${API_HOST}
      - API_ORIGIN_URL=${API_ORIGIN_URL}
      - TYPEORM_CONNECTION=${TYPEORM_CONNECTION}
      - TYPEORM_USERNAME=${TYPEORM_USERNAME}
      - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
      - TYPEORM_DATABASE=${TYPEORM_DATABASE}
      - TYPEORM_PORT=${TYPEORM_PORT}
      - TYPEORM_HOST=postgres
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_TIME=${JWT_EXPIRATION_TIME}
      - UPLOADED_FILES_DESTINATION=${UPLOADED_FILES_DESTINATION}
    networks:
      - postgres

  client:
    container_name: kakapo-client
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - '80:80'
    depends_on:
      - server
    environment:
      - REACT_APP_BASE_URL=${REACT_APP_BASE_URL}
    networks:
      - postgres
    restart: always

  pgadmin:
    links:
    - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "8080:8080"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DATABASE}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - postgres

networks:
  postgres:
    driver: bridge

volumes:
  pgdata:
  pgadmin-data:
